{
    "componentChunkName": "component---src-templates-lesson-template-js",
    "path": "/async-and-events-in-react",
    "result": {"data":{"markdownRemark":{"html":"<p>We need to handle asynchronous loading of data gracefully. We can't just show the user nothing until everything loads; we need to let them know we're doing work to get their UI ready. Let's see how to do that.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// replace Details.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> pf <span class=\"token keyword\">from</span> <span class=\"token string\">\"petfinder-client\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Carousel <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Carousel\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> petfinder <span class=\"token operator\">=</span> <span class=\"token function\">pf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">API_KEY</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">secret</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">API_SECRET</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Details</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">loading</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    petfinder<span class=\"token punctuation\">.</span>pet\n      <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token string\">\"full\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> breed<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>petfinder<span class=\"token punctuation\">.</span>pet<span class=\"token punctuation\">.</span>breeds<span class=\"token punctuation\">.</span>breed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          breed <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>petfinder<span class=\"token punctuation\">.</span>pet<span class=\"token punctuation\">.</span>breeds<span class=\"token punctuation\">.</span>breed<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          breed <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>petfinder<span class=\"token punctuation\">.</span>pet<span class=\"token punctuation\">.</span>breeds<span class=\"token punctuation\">.</span>breed<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>petfinder<span class=\"token punctuation\">.</span>pet<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">animal</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>petfinder<span class=\"token punctuation\">.</span>pet<span class=\"token punctuation\">.</span>animal<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">location</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">.</span>petfinder<span class=\"token punctuation\">.</span>pet<span class=\"token punctuation\">.</span>contact<span class=\"token punctuation\">.</span>city<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n            data<span class=\"token punctuation\">.</span>petfinder<span class=\"token punctuation\">.</span>pet<span class=\"token punctuation\">.</span>contact<span class=\"token punctuation\">.</span>state\n          <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>petfinder<span class=\"token punctuation\">.</span>pet<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">media</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>petfinder<span class=\"token punctuation\">.</span>pet<span class=\"token punctuation\">.</span>media<span class=\"token punctuation\">,</span>\n          breed<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">loading</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> err <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>loading<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>loading … <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animal<span class=\"token punctuation\">,</span> breed<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> description <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"details\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>animal<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> — </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>breed<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> — </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>location<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Details<span class=\"token punctuation\">;</span></code></pre></div>\n<p>The constructor is getting annoying. We can use something called class properties to make it a lot nicer and easier to ready. Class properties are an upcoming part of JavaScript so we need to tell Parcel to include that code transformation when it transpiles our code. We do that by making a [Babel][babel] config file. Babel is the actual library that does the code transformation.</p>\n<p>Since we're going to take ahold of our own Babel configuration, we need to take over <em>all of it</em>. Parcel won't do it for us anymore. So install the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D babel-eslint babel-core babel-preset-env babel-preset-react babel-plugin-transform-class-properties</code></pre></div>\n<p>Now make a file called <code class=\"language-text\">.babelrc</code> with the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"env\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"targets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"browsers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"last 2 versions\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"transform-class-properties\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Babel's core concept is a plugin. Every one sort of a transformation it can perform is encapsulated into a plugin. Here we're including one explicitly: transform-class-properties. Then we're including a <em>preset</em> as well. A preset is just a group of plugins, grouped together for convenience. <code class=\"language-text\">env</code> is a particularly good one you should expect to normally use. In this case, we've set up <code class=\"language-text\">env</code> to only target the last two major releases of the major browsers.</p>\n<p>This will allow us too to make ESLint play nice too (Prettier handles this automatically.) Add one line to the top level of your <code class=\"language-text\">.eslintrc.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  …\n  <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"babel-eslint\"</span><span class=\"token punctuation\">,</span>\n  …\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now with this, we can modify Details to be as so:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// replace constructor</span>\nstate <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">loading</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"-e50c1ec3ec02b4cf3b119e1c59ad99884bc37d92\" style=\"position:relative;\"><a href=\"#-e50c1ec3ec02b4cf3b119e1c59ad99884bc37d92\" aria-label=\" e50c1ec3ec02b4cf3b119e1c59ad99884bc37d92 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌳 <a href=\"https://github.com/btholt/complete-intro-to-react-v4/commit/e50c1ec3ec02b4cf3b119e1c59ad99884bc37d92\">e50c1ec3ec02b4cf3b119e1c59ad99884bc37d92</a></h2>\n<p>Loads easier to read, right? Feel free to replace the other constructors in the project if you want to.</p>\n<p>Okay, so on this page, notice first we have a loading indicator (this one isn't nice looking but you could put some effort into it if you wanted.) This is a good idea while you're waiting for data to load.</p>\n<p>Let's make a nice photo carousel of the pictures for the animal now. Make a new file called Carousel.js</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Carousel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">photos</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> media <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> photos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>media <span class=\"token operator\">&amp;&amp;</span> media<span class=\"token punctuation\">.</span>photos <span class=\"token operator\">&amp;&amp;</span> media<span class=\"token punctuation\">.</span>photos<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      photos <span class=\"token operator\">=</span> media<span class=\"token punctuation\">.</span>photos<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">photo</span> <span class=\"token operator\">=></span> photo<span class=\"token punctuation\">[</span><span class=\"token string\">\"@size\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"pn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> photos <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> photos<span class=\"token punctuation\">,</span> active <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"carousel\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>photos<span class=\"token punctuation\">[</span>active<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"animal\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"carousel-smaller\"</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>photos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">photo<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>img\n              key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>photo<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span>\n              src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>photo<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span>\n              className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index <span class=\"token operator\">===</span> active <span class=\"token operator\">?</span> <span class=\"token string\">\"active\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">}</span>\n              alt<span class=\"token operator\">=</span><span class=\"token string\">\"animal thumbnail\"</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Carousel<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Add the Carousel component to the Detail page.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// first component inside div.details</span>\n<span class=\"token operator\">&lt;</span>Carousel media<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>media<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li>getDerivedStateFromProps does exactly what it sounds like: it allows you to accept data from a parent and get state that is derived from it. In this case, we're removing the superfluous photos and just keeping the ones we want.</li>\n</ul>\n<p>Let's make it so we can react to someone changing the photo on the carousel.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Carousel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">photos</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> media <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> photos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>media <span class=\"token operator\">&amp;&amp;</span> media<span class=\"token punctuation\">.</span>photos <span class=\"token operator\">&amp;&amp;</span> media<span class=\"token punctuation\">.</span>photos<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      photos <span class=\"token operator\">=</span> media<span class=\"token punctuation\">.</span>photos<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">photo</span> <span class=\"token operator\">=></span> photo<span class=\"token punctuation\">[</span><span class=\"token string\">\"@size\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"pn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> photos <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">handleIndexClick</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> <span class=\"token operator\">+</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>index\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> photos<span class=\"token punctuation\">,</span> active <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"carousel\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>photos<span class=\"token punctuation\">[</span>active<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"animal\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"carousel-smaller\"</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>photos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">photo<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token comment\">/* eslint-disable-next-line */</span>\n            <span class=\"token operator\">&lt;</span>img\n              onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleIndexClick<span class=\"token punctuation\">}</span>\n              data<span class=\"token operator\">-</span>index<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span>\n              key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>photo<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span>\n              src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>photo<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span>\n              className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index <span class=\"token operator\">===</span> active <span class=\"token operator\">?</span> <span class=\"token string\">\"active\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">}</span>\n              alt<span class=\"token operator\">=</span><span class=\"token string\">\"animal thumbnail\"</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Carousel<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>This is how you handle events in React. If it was keyboard handler, you'd do an onChange or onKeyUp, etc. handler.</li>\n<li>Notice that the handleIndexClick function is an arrow function. This is because we need the <code class=\"language-text\">this</code> in <code class=\"language-text\">handleIndexClick</code> to be the correct <code class=\"language-text\">this</code>. An arrow function assures that because it will be the scope of where it was defined.</li>\n<li>The data attribute comes back as a string. We want it to be a number, hence the <code class=\"language-text\">+</code>.</li>\n<li>We're doing bad accessibility stuff. But this makes it a lot simpler for now. But don't do this in production.</li>\n</ul>\n<p> </p>\n<h2 id=\"-ce33b3ccc82fd78cc21b30d0dcc7bb1cb0337b72\" style=\"position:relative;\"><a href=\"#-ce33b3ccc82fd78cc21b30d0dcc7bb1cb0337b72\" aria-label=\" ce33b3ccc82fd78cc21b30d0dcc7bb1cb0337b72 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌳 <a href=\"https://github.com/btholt/complete-intro-to-react-v4/commit/ce33b3ccc82fd78cc21b30d0dcc7bb1cb0337b72\">ce33b3ccc82fd78cc21b30d0dcc7bb1cb0337b72</a></h2>","frontmatter":{"path":"/async-and-events-in-react","title":"Handling Events and Async UIs with React","order":8}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":1,"path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":2,"path":"/pure-react","title":"Pure React"}}},{"node":{"frontmatter":{"order":3,"path":"/eslint-prettier","title":"npm, ESLint & Prettier"}}},{"node":{"frontmatter":{"order":4,"path":"/parcel","title":"Parcel"}}},{"node":{"frontmatter":{"order":5,"path":"/jsx","title":"JSX"}}},{"node":{"frontmatter":{"order":6,"path":"/react-state-and-lifecycles","title":"State and Lifecycle Methods with React"}}},{"node":{"frontmatter":{"order":7,"path":"/reach-router","title":"Reach Router"}}},{"node":{"frontmatter":{"order":8,"path":"/async-and-events-in-react","title":"Handling Events and Async UIs with React"}}},{"node":{"frontmatter":{"order":9,"path":"/forms","title":"Forms with React"}}},{"node":{"frontmatter":{"order":10,"path":"/context","title":"Context"}}},{"node":{"frontmatter":{"order":11,"path":"/portals","title":"Portals"}}},{"node":{"frontmatter":{"order":12,"path":"/conclusion","title":"Conclusion"}}},{"node":{"frontmatter":{"order":13,"path":"/testing","title":"Testing"}}},{"node":{"frontmatter":{"order":14,"path":"/emotion","title":"Emotion"}}},{"node":{"frontmatter":{"order":15,"path":"/code-splitting","title":"Code Splitting"}}},{"node":{"frontmatter":{"order":16,"path":"/redux","title":"Redux"}}},{"node":{"frontmatter":{"order":17,"path":"/server-side-rendering","title":"Server Side Rendering"}}},{"node":{"frontmatter":{"order":18,"path":"/preact","title":"Preact"}}},{"node":{"frontmatter":{"order":19,"path":"/code-organization","title":"Code Organization"}}},{"node":{"frontmatter":{"order":20,"path":"/typescript","title":"TypeScript"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["831804104"]}